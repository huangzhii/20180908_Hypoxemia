# 09/09/2018 Zhi Huang
getwd()
# 09/09/2018 Zhi Huang
setwd("/Users/zhi/Desktop/Cong_Feng/Sai_Huang")
read.xlsx("ANP32A由低至高排列.xlsx")
read.csv("ANP32A由低至高排列.csv")
# 09/09/2018 Zhi Huang
setwd("/Users/zhi/Desktop/Cong_Feng/Sai_Huang")
read.csv("ANP32A由低至高排列.csv")
read.csv("./ANP32A由低至高排列.csv")
read.csv("./ANP32A由低至高排列.csv")
ANP32A = read.csv("./ANP32A由低至高排列.csv")
View(ANP32A)
ANP32A = ANP32A[1:185,]
View(ANP32A)
ANP32A.sorted = arrange(ANP32A, ANP32A)
# 09/09/2018 Zhi Huang
library("dplyr")
ANP32A.sorted = arrange(ANP32A, ANP32A)
View(ANP32A.sorted)
# log-ranked p-value
mv = median(ANP32A.sorted$ANP32A)
group = cbind(dim(ANP32A.sorted)[1])
for(j in 1:dim(ANP32A.sorted)[1]){
if(res[j] < mv){
group[j] = 1
}else{
group[j] = 2
}
}
# log-ranked p-value
mv = median(ANP32A.sorted$ANP32A)
group = cbind(dim(ANP32A.sorted)[1])
for(j in 1:dim(ANP32A.sorted)[1]){
if(ANP32A.sorted$ANP32A[j] < mv){
group[j] = 1
}else{
group[j] = 2
}
}
group
?Surv
??Surv
library(survival)
?Surv
View(ANP32A)
mySurvTest = Surv(ANP32A.sorted$EFS, ANP32A.sorted$EFS.group)
# logrank
log1 = survdiff(mySurvTest ~ group)
p = pchisq(log1$chisq, 1, lower.tail=FALSE)
print(p)
plot(ANP32A.sorted$ANP32A)
plot(ANP32A.sorted$EFS.group)
# plot KM curve
fit = survfit(mySurvTest ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = paste(curr_dir, sprintf("KMCurve_cv_%d_of_5.png", i), sep="/"),
width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Survival", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = "topright", legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p, format="g", digits = 5), sep = ""),
pos = 4, cex = 1)
setwd("/Users/zhi/Desktop/Cong_Feng/20180908_Hypoxemia")
vitalsign1_3 = read.csv("./data/mimic_mimiciii_hypoxemia_vitalsign1_3.csv", header = T)
vitalsign2_3 = read.csv("./data/mimic_mimiciii_hypoxemia_vitalsign2_3.csv", header = T)
# 09/09/2018 Zhi Huang
library("dplyr")
library(survival)
setwd("/Users/zhi/Desktop/Cong_Feng/Sai_Huang")
ANP32A = read.csv("./ANP32A由低至高排列.csv")
ANP32A = ANP32A[1:185,]
ANP32A.sorted = arrange(ANP32A, ANP32A)
ANP32A = read.csv("./ANP32A由低至高排列.csv")
View(ANP32A)
ANP32A = ANP32A[1:185,]
View(ANP32A.sorted)
View(ANP32A)
ANP32A.sorted = arrange(ANP32A, X201043_s_at)
View(ANP32A.sorted)
colnames(ANP32A)[1] = "expr"
ANP32A.sorted = arrange(ANP32A, expr)
View(ANP32A.sorted)
# log-ranked p-value
mv = median(ANP32A.sorted$expr)
group = cbind(dim(ANP32A.sorted)[1])
for(j in 1:dim(ANP32A.sorted)[1]){
if(ANP32A.sorted$expr[j] < mv){
group[j] = 1
}else{
group[j] = 2
}
}
mySurvTest = Surv(ANP32A.sorted$EFS, ANP32A.sorted$EFS.group)
# logrank
log1 = survdiff(mySurvTest ~ group)
p = pchisq(log1$chisq, 1, lower.tail=FALSE)
print(p)
test_p_value[repeat_run, i] = p
# plot KM curve
fit = survfit(mySurvTest ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Survival", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = "topright", legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p, format="g", digits = 5), sep = ""),
pos = 4, cex = 1)
View(ANP32A.sorted)
ANP32A.sorted$group = group
View(ANP32A.sorted)
# Compute the analysis of variance
res.aov <- aov(EFS ~ group, data = ANP32A.sorted)
# Summary of the analysis
summary(res.aov)
View(ANP32A.sorted)
# Compute the analysis of variance
res.aov <- aov(expr ~ group, data = ANP32A.sorted)
# Summary of the analysis
summary(res.aov)
ANP32A.sorted$EFS[ANP32A.sorted$group == 1]
t.test(ANP32A.sorted$EFS[ANP32A.sorted$group == 1], ANP32A.sorted$EFS[ANP32A.sorted$group == 0])
ANP32A.sorted$EFS[ANP32A.sorted$group == 0]
ANP32A.sorted$group == 0
t.test(ANP32A.sorted$EFS[ANP32A.sorted$group == 1], ANP32A.sorted$EFS[ANP32A.sorted$group == 2])
boxplot(rbind(ANP32A.sorted$EFS[ANP32A.sorted$group == 1], ANP32A.sorted$EFS[ANP32A.sorted$group == 2]))
rbind(ANP32A.sorted$EFS[ANP32A.sorted$group == 1], ANP32A.sorted$EFS[ANP32A.sorted$group == 2])
boxplot(cbind(ANP32A.sorted$EFS[ANP32A.sorted$group == 1], ANP32A.sorted$EFS[ANP32A.sorted$group == 2]))
### t-SNE
library(Rtsne)
vitalsign.all
# 20180908 Zhi Huang
library("dplyr")
setwd("/Users/zhi/Desktop/Cong_Feng/20180908_Hypoxemia")
vitalsign1_3 = read.csv("./data/mimic_mimiciii_hypoxemia_vitalsign1_3.csv", header = T)
vitalsign2_3 = read.csv("./data/mimic_mimiciii_hypoxemia_vitalsign2_3.csv", header = T)
vitalsign1_3.complete = vitalsign1_3[complete.cases(vitalsign1_3), ]
vitalsign1_3.complete = vitalsign1_3.complete[vitalsign1_3.complete$vitalsign_charttime < vitalsign1_3.complete$po260_first_charttime, ]
vitalsign1_3.complete = vitalsign1_3.complete[vitalsign1_3.complete$vitalsign_charttime > 0,]
vitalsign1_3.complete$temp = vitalsign1_3.complete$po260_first_charttime - vitalsign1_3.complete$vitalsign_charttime
vitalsign1_3.complete = data.frame(vitalsign1_3.complete)
vitalsign1_3.sorted = arrange(vitalsign1_3.complete, temp)
vitalsign1_3.final = vitalsign1_3.sorted[!duplicated(vitalsign1_3.sorted$icustay_id),]
vitalsign1_3.final = arrange(vitalsign1_3.final, icustay_id)
vitalsign1_3.final = vitalsign1_3.final[, -which(names(vitalsign1_3.final) %in% c("po260_first_charttime","vitalsign_charttime", "intime", "temp"))]
vitalsign2_3.complete = vitalsign2_3[complete.cases(vitalsign2_3), ]
vitalsign2_3.complete = vitalsign2_3.complete[vitalsign2_3.complete$vitalsign_charttime > 0,]
vitalsign2_3.sorted = arrange(vitalsign2_3.complete, vitalsign_charttime)
vitalsign2_3.final = vitalsign2_3.sorted[!duplicated(vitalsign2_3.sorted$icustay_id),]
vitalsign2_3.final = arrange(vitalsign2_3.final, icustay_id)
vitalsign2_3.final = vitalsign2_3.final[, -which(names(vitalsign2_3.final) %in% c("vitalsign_charttime", "intime"))]
#preprocessing finised
vitalsign1_3.final$isHypoxemia = 1
vitalsign2_3.final$isHypoxemia = 0
vitalsign.all = rbind(vitalsign1_3.final, vitalsign2_3.final)
vitalsign.all
vitalsign.all[,1:8]
vitalsign.all[,1:9]
vitalsign.all[,2:8]
as.matrix(vitalsign.all[,2:8])
tsne_model = Rtsne(as.matrix(vitalsign.all[,2:8]), check_duplicates=FALSE, pca=T, perplexity=20, theta=0.5, dims=2)
d_tsne = as.data.frame(tsne_model$Y)
d_tsne = as.data.frame(tsne_model$Y)
View(d_tsne)
data = cbind(d_tsne, vitalsign.all$isHypoxemia)
colnames(data) = c("V1","V2","OS.Status")
justplot(data, sprintf("OS Event (all patients), code: %d x %d",
dim(d_tsne)[1],dim(code.train)[2]))
### t-SNE
library(Rtsne)
justplot <- function(data, title = "No title"){
ggplot(data, aes(x=V1, y=V2, fill=OS.Status)) +
geom_point(size=3, shape=21, stroke = 0.5) +
guides(colour=guide_legend(override.aes=list(size=6))) +
xlab("Dim 1") + ylab("Dim 2") +
ggtitle(title) +
scale_fill_discrete(name = "Survival Information") +
theme_bw(base_size=14) +
theme(legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.key.height=unit(1.5,"line"),
legend.key.width=unit(1.5,"line"),
# legend.position = c(0.12, 0.88),
legend.background = element_rect(color = "black",
fill = "white", size = 0.5, linetype = "solid", lw),
plot.title = element_text(size=16, hjust = 0.5),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(size=12, angle = 0, hjust = 1),
axis.text.y = element_text(size=12)) #+
# scale_fill_manual(values = c("deeppink1", "gainsboro"))
}
justplot(data, sprintf("OS Event (all patients), code: %d x %d",
dim(d_tsne)[1],dim(code.train)[2]))
library(ggplot2)
justplot <- function(data, title = "No title"){
ggplot(data, aes(x=V1, y=V2, fill=OS.Status)) +
geom_point(size=3, shape=21, stroke = 0.5) +
guides(colour=guide_legend(override.aes=list(size=6))) +
xlab("Dim 1") + ylab("Dim 2") +
ggtitle(title) +
scale_fill_discrete(name = "Survival Information") +
theme_bw(base_size=14) +
theme(legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.key.height=unit(1.5,"line"),
legend.key.width=unit(1.5,"line"),
# legend.position = c(0.12, 0.88),
legend.background = element_rect(color = "black",
fill = "white", size = 0.5, linetype = "solid", lw),
plot.title = element_text(size=16, hjust = 0.5),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(size=12, angle = 0, hjust = 1),
axis.text.y = element_text(size=12)) #+
# scale_fill_manual(values = c("deeppink1", "gainsboro"))
}
justplot(data, sprintf("OS Event (all patients), code: %d x %d",
dim(d_tsne)[1],dim(code.train)[2]))
justplot(data, "aa")
View(data)
ggplot(data, aes(x=V1, y=V2, fill=OS.Status)) +
geom_point(size=3, shape=21, stroke = 0.5) +
guides(colour=guide_legend(override.aes=list(size=6))) +
xlab("Dim 1") + ylab("Dim 2") +
ggtitle(title) +
scale_fill_discrete(name = "Survival Information") +
theme_bw(base_size=14) +
theme(legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.key.height=unit(1.5,"line"),
legend.key.width=unit(1.5,"line"),
# legend.position = c(0.12, 0.88),
legend.background = element_rect(color = "black",
fill = "white", size = 0.5, linetype = "solid", lw),
plot.title = element_text(size=16, hjust = 0.5),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(size=12, angle = 0, hjust = 1),
axis.text.y = element_text(size=12)) #+
data = cbind(d_tsne, as.character(vitalsign.all$isHypoxemia))
colnames(data) = c("V1","V2","OS.Status")
justplot(data, "aa")
### t-SNE
library(Rtsne)
library(ggplot2)
justplot <- function(data, title = "No title"){
ggplot(data, aes(x=V1, y=V2, fill=OS.Status)) +
geom_point(size=3, shape=21, stroke = 0.5) +
guides(colour=guide_legend(override.aes=list(size=6))) +
xlab("Dim 1") + ylab("Dim 2") +
ggtitle(title) +
scale_fill_discrete(name = "Is Hypoxemia") +
theme_bw(base_size=14) +
theme(legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
legend.key.height=unit(1.5,"line"),
legend.key.width=unit(1.5,"line"),
# legend.position = c(0.12, 0.88),
legend.background = element_rect(color = "black",
fill = "white", size = 0.5, linetype = "solid", lw),
plot.title = element_text(size=16, hjust = 0.5),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(size=12, angle = 0, hjust = 1),
axis.text.y = element_text(size=12)) #+
# scale_fill_manual(values = c("deeppink1", "gainsboro"))
}
tsne_model = Rtsne(as.matrix(vitalsign.all[,2:8]), check_duplicates=FALSE, pca=T, perplexity=20, theta=0.5, dims=2)
d_tsne = as.data.frame(tsne_model$Y)
print("save to file ...")
data = cbind(d_tsne, as.character(vitalsign.all$isHypoxemia))
colnames(data) = c("V1","V2","OS.Status")
justplot(data, "Patient features v.s. hypoxemia")
justplot(data, "Patient features v.s. hypoxemia")
tsne_model = Rtsne(as.matrix(vitalsign.all[,2:8]), check_duplicates=FALSE, pca=T, perplexity=20, theta=0.5, dims=2)
d_tsne = as.data.frame(tsne_model$Y)
print("save to file ...")
data = cbind(d_tsne, as.character(vitalsign.all$isHypoxemia))
colnames(data) = c("V1","V2","OS.Status")
justplot(data, "Patient features v.s. hypoxemia")
